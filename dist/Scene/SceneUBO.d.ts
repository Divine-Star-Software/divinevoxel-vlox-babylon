import { Scene } from "@babylonjs/core/scene";
import { UniformBuffer } from "@babylonjs/core/Materials/uniformBuffer";
import { Vector4 } from "@babylonjs/core/Maths/math.vector";
import { Color3 } from "@babylonjs/core/Maths/math.color";
export declare class SceneUBO {
    buffer: UniformBuffer;
    static Define: string;
    static Create(scene: Scene): UniformBuffer;
    fogColor: Color3;
    skyColor: Color3;
    fogOptions: Vector4;
    fogShadeOptions: Vector4;
    skyOptions: Vector4;
    skyShadeOptions: Vector4;
    shadeOptions: Vector4;
    effectOptions: Vector4;
    levels: Vector4;
    _isDirty: boolean;
    constructor(buffer: UniformBuffer);
    setSkyColor(r: number, g: number, b: number): void;
    setSkyColor(color: Color3): void;
    setSkyOptions(x: number, y: number, z: number, w: number): void;
    setSkyOptions(options: Vector4): void;
    setSkyShadeOptions(x: number, y: number, z: number, w: number): void;
    setSkyShadeOptions(options: Vector4): void;
    setFogColor(r: number, g: number, b: number): void;
    setFogColor(color: Color3): void;
    setFogOptions(x: number, y: number, z: number, w: number): void;
    setFogOptions(options: Vector4): void;
    setFogShadeOptions(x: number, y: number, z: number, w: number): void;
    setFogShadeOptions(options: Vector4): void;
    setShadeOptions(x: number, y: number, z: number, w: number): void;
    setShadeOptions(options: Vector4): void;
    setEffectOptions(x: number, y: number, z: number, w: number): void;
    setEffectOptions(options: Vector4): void;
    setLevels(x: number, y: number, z: number, w: number): void;
    setLevels(levels: Vector4): void;
    updateTime(time: number): void;
    clone(scene: Scene): SceneUBO;
    update(): void;
}
